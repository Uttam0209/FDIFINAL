using BusinessLayer;
using Encryption;
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.IO;
using context = System.Web.HttpContext;
using System.Web.UI.HtmlControls;

public partial class User_TestingU_ProductList : System.Web.UI.Page
{
    #region Pagevariable
    private Logic Lo = new Logic();
    HybridDictionary hysaveip = new HybridDictionary();
    private DataTable DtGrid = new DataTable();
    private string _msg = string.Empty;
    private string _sysMsg = string.Empty;
    DataUtility Co = new DataUtility();
    private Cryptography Encrypt = new Cryptography();
    private PagedDataSource pgsource = new PagedDataSource();
    DataTable DtCompany = new DataTable();
    DataTable DtFilterView = new DataTable();
    DataTable dtCart = new DataTable();
    DataRow dr;
    string totalcartvalue;
    #endregion
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!this.IsPostBack)
        {
            try
            {
                if (Session["DCart"] != null)
                {
                    ViewState["buyitems"] = Session["DCart"];
                    dtCart = (DataTable)ViewState["buyitems"];
                    totalno.InnerText = dtCart.Rows.Count.ToString();
                }
                else
                {
                    totalno.InnerText = dtCart.Rows.Count.ToString();
                }
                MenuLink();
                ControlGrid();
            }
            catch (Exception ex)
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alert", "alert('Technical Error:- " + ex.Message + "');", true);
            }
        }
    }
    protected void MenuLink()
    {
        if (Session["User"] != null)
        {
            linkusername.Text = Encrypt.DecryptData(Session["User"].ToString());
            linkusername.Visible = true;
            linkusername.Text = "Welcome: " + linkusername.Text;
            lnkfeedback.Visible = true;
            linklogin.Visible = false;
            lblmis.Visible = true;
            lbllogout.Visible = true;
            divIntrested.Visible = true;
            lbmarket.Visible = false;
            lbSuccesstory.Visible = true;
            A7.Visible = true;
            A8.Visible = false;
            if (Encrypt.DecryptData(Session["User"].ToString()).ToLower() == "testlink@test.com")
            {
                A1.Visible = true; A3.Visible = true; A4.Visible = true; A5.Visible = true; mhide.Visible = true; A6.Visible = true;
            }
            else
            {
                A1.Visible = false; A3.Visible = false; A4.Visible = false; A5.Visible = false; mhide.Visible = false; A6.Visible = false;
            }
        }
        else
        {
            lbSuccesstory.Visible = false;
            linklogin.Visible = true;
            linkusername.Visible = false;
            lblmis.Visible = false;
            lbllogout.Visible = false;
            divIntrested.Visible = false;
            lbmarket.Visible = false;
            PR.Visible = false; A3.Visible = false; A7.Visible = false; A8.Visible = true; A1.Visible = false;
        }
    }
    private void StoreUserIP(string Prodref)
    {
        string ipAddress;

        DateTime Date = Convert.ToDateTime(DateTime.Now.ToString());
        string mDate = Date.ToString("dd-MM-yyyy");
        hysaveip["VisitedDate"] = mDate.ToString();
        DateTime Time = Convert.ToDateTime(DateTime.Now.ToString());
        string mTime = Time.ToString("hh:mm:ss");
        hysaveip["VisitedTime"] = mDate.ToString();
        ipAddress = Request.ServerVariables["HTTP_X_FORWARDED_FOR"];
        if (ipAddress == "" || ipAddress == null)
            ipAddress = Request.ServerVariables["REMOTE_ADDR"];
        hysaveip["IPAddress"] = ipAddress.ToString();
        hysaveip["ProductRefNo"] = Prodref.ToString();
        string strsaveip = Lo.SaveUserIP(hysaveip, out _sysMsg, out _msg);

    }
    private void ControlGrid()
    {
        try
        {
            ddlcomp.Items.Insert(0, "Select");
            ddlnsg.Items.Insert(0, "Select");
            ddlprodindustrydomain.Items.Insert(0, "Select");
            BindProduct();
            BindComapnyCheckbox();
            BindNSG();
            BindIndusrtyDomain();
            BindIndiCategory();
        }
        catch (Exception ex)
        {
            ExceptionLogging.SendErrorToText(ex);
        }
    }
    protected void BindProduct()
    {
        string mMinute = DateTime.Now.ToString("mm");
        DtGrid = Lo.RetriveFilterCode(mMinute, "", "BindMainProd");
        if (DtGrid.Rows.Count > 0)
        {
            Session["TempData"] = DtGrid;
            SeachResult();
        }
        else
        {
            divcontentproduct.Visible = false;
            dlproduct.DataBind();
        }
    }

    #region  DDL Fill
    DataTable DtCompanyDDL = new DataTable();
    protected void BindComapnyCheckbox()
    {
        if (DtGrid.Rows.Count > 0)
        {
            DataTable mDtGrid = DtGrid.DefaultView.ToTable(true, "CompanyName", "CompanyRefNo");
            mDtGrid.DefaultView.Sort = "CompanyName asc";
            Co.FillDropdownlist(ddlcomp, mDtGrid, "CompanyName", "CompanyRefNo");
            ddlcomp.Items.Insert(0, "Select");
            ddlcomp.Enabled = true;
        }
        else
        {
            ddlcomp.Enabled = false;
        }
    }
    protected void BindComapnyDivisionCheckbox()
    {
        try
        {
            if (Session["TempData"] != null)
            {
                DtGrid = (DataTable)Session["TempData"];
                DataTable mDtGrid = DtGrid.DefaultView.ToTable(true, "FactoryName", "FactoryRefNo", "CompanyRefNo");
                mDtGrid.DefaultView.Sort = "FactoryName asc";
                DataView dvm = new DataView(mDtGrid);
                dvm.RowFilter = "CompanyRefNo='" + ddlcomp.SelectedItem.Value + "' and FactoryName <> ''";
                Co.FillDropdownlist(ddldivision, dvm.ToTable(), "FactoryName", "FactoryRefNo");
                ddldivision.Items.Insert(0, "Select");
                divfilterdivision.Visible = true;
            }
            else
            {
                divfilterdivision.Visible = false;
            }
        }
        catch (Exception ex)
        { }
    }
    protected void BindComapnyDivisionUnitCheckbox()
    {
        try
        {
            if (Session["TempData"] != null)
            {
                DtGrid = (DataTable)Session["TempData"];
                DataTable mDtGrid = DtGrid.DefaultView.ToTable(true, "UnitName", "UnitRefNo", "FactoryRefNo");
                mDtGrid.DefaultView.Sort = "UnitName asc";
                DataView dvm = new DataView(mDtGrid);
                dvm.RowFilter = "FactoryRefNo='" + ddldivision.SelectedItem.Value + "' and UnitName <> ''";
                Co.FillDropdownlist(ddlunit, dvm.ToTable(), "UnitName", "UnitRefNo");
                ddlunit.Items.Insert(0, "Select");
                divfilterunit.Visible = true;
            }
            else
            {
                divfilterunit.Visible = false;
            }
        }
        catch (Exception ex)
        { }
    }
    protected void BindIndusrtyDomain()
    {
        try
        {

            if (ddlcomp.SelectedItem.Text != "Select")
            {
                if (Session["TempData"] != null)
                {
                    DtGrid = (DataTable)Session["TempData"];
                    DataTable mDtGrid = DtGrid.DefaultView.ToTable(true, "ProdIndustryDoamin", "TechnologyLevel1", "CompanyRefNo");
                    mDtGrid.DefaultView.Sort = "ProdIndustryDoamin asc";
                    DataView dvm = new DataView(mDtGrid);
                    dvm.RowFilter = "CompanyRefNo='" + ddlcomp.SelectedItem.Value + "'";
                    Co.FillDropdownlist(ddlprodindustrydomain, dvm.ToTable(), "ProdIndustryDoamin", "TechnologyLevel1");
                    ddlprodindustrydomain.Items.Insert(0, "Select");
                    Div7.Visible = true;
                }
                else
                {
                    Div7.Visible = false;
                    divisd.Visible = false;
                }
            }
            else
            {
                if (DtGrid.Rows.Count > 0)
                {
                    DataTable mDtGrid = DtGrid.DefaultView.ToTable(true, "ProdIndustryDoamin", "TechnologyLevel1");
                    mDtGrid.DefaultView.Sort = "ProdIndustryDoamin asc";
                    Co.FillDropdownlist(ddlprodindustrydomain, mDtGrid, "ProdIndustryDoamin", "TechnologyLevel1");
                    ddlprodindustrydomain.Items.Insert(0, "Select");
                    Div7.Visible = true;
                }
                else
                {
                    Div7.Visible = false;
                    divisd.Visible = false;
                }
            }
        }
        catch (Exception ex)
        { }
    }
    protected void BindIndustrySubDomain()
    {
        if (ddlprodindustrydomain.SelectedItem.Text != "Select")
        {
            if (Session["TempData"] != null)
            {
                DtGrid = (DataTable)Session["TempData"];
                DataTable mDtGrid = DtGrid.DefaultView.ToTable(true, "ProdIndustrySubDomain", "TechnologyLevel2", "TechnologyLevel1");
                mDtGrid.DefaultView.Sort = "ProdIndustrySubDomain asc";
                DataView dvm = new DataView(mDtGrid);
                dvm.RowFilter = "TechnologyLevel1='" + ddlprodindustrydomain.SelectedItem.Value + "'";
                Co.FillDropdownlist(ddlindustrysubdoamin, dvm.ToTable(), "ProdIndustrySubDomain", "TechnologyLevel2");
                ddlindustrysubdoamin.Items.Insert(0, "Select");
                divisd.Visible = true;
            }
            else
            {
                divisd.Visible = false;
            }
        }
        else
        {
            divisd.Visible = false;
        }
    }
    protected void BindNSG()
    {
        if (ddlcomp.SelectedItem.Text != "Select")
        {
            if (Session["TempData"] != null)
            {
                DtGrid = (DataTable)Session["TempData"];
                DataTable mDtGrid = DtGrid.DefaultView.ToTable(true, "NSNGROUP", "ProductLevel1", "CompanyRefNo");
                mDtGrid.DefaultView.Sort = "NSNGROUP asc";
                DataView dvm = new DataView(mDtGrid);
                dvm.RowFilter = "CompanyRefNo='" + ddlcomp.SelectedItem.Value + "' and ProductLevel1!=''";
                Co.FillDropdownlist(ddlnsg, dvm.ToTable(), "NSNGROUP", "ProductLevel1");
                ddlnsg.Items.Insert(0, "Select");
            }
            else
            {
                ddlnsg.Visible = false;
                divnsc.Visible = false;
                divic.Visible = false;
            }
        }
        else
        {
            if (DtGrid.Rows.Count > 0)
            {
                DataTable mDtGrid = DtGrid.DefaultView.ToTable(true, "NSNGROUP", "ProductLevel1");
                mDtGrid.DefaultView.Sort = "NSNGROUP asc";
                Co.FillDropdownlist(ddlnsg, mDtGrid, "NSNGROUP", "ProductLevel1");
                ddlnsg.Items.Insert(0, "Select");
            }
            else
            {
                ddlnsg.Visible = false;
                divnsc.Visible = false;
                divic.Visible = false;
            }
        }
    }
    protected void BindNSC()
    {
        if (ddlnsg.SelectedIndex != -1 || ddlnsg.SelectedItem.Text != "Select")
        {
            if (Session["TempData"] != null)
            {
                DtGrid = (DataTable)Session["TempData"];
                DataTable mDtGrid = DtGrid.DefaultView.ToTable(true, "NSNGroupClass", "ProductLevel2", "ProductLevel1");
                mDtGrid.DefaultView.Sort = "NSNGROUPClass asc";
                DataView dvm = new DataView(mDtGrid);
                dvm.RowFilter = "ProductLevel1='" + ddlnsg.SelectedItem.Value + "'";
                Co.FillDropdownlist(ddlnsc, dvm.ToTable(), "NSNGroupClass", "ProductLevel2");
                ddlnsc.Items.Insert(0, "Select");
                divnsc.Visible = true;
            }
            else
            {
                divic.Visible = false;
                divnsc.Visible = false;
            }
        }
    }
    protected void BindIC()
    {
        if (ddlnsc.SelectedIndex != -1 || ddlnsc.SelectedItem.Text != "Select")
        {
            if (Session["TempData"] != null)
            {
                DtGrid = (DataTable)Session["TempData"];
                DataTable mDtGrid = DtGrid.DefaultView.ToTable(true, "ItemCode", "ProductLevel3", "ProductLevel2");
                mDtGrid.DefaultView.Sort = "ItemCode asc";
                DataView dvm = new DataView(mDtGrid);
                dvm.RowFilter = "ProductLevel2='" + ddlnsc.SelectedItem.Value + "'";
                Co.FillDropdownlist(ddlic, dvm.ToTable(), "ItemCode", "ProductLevel3");
                ddlic.Items.Insert(0, "Select");
                divic.Visible = true;
            }
            else
            {
                ddlic.Items.Insert(0, "Select");
            }
        }
    }
    protected void BindIndiCategory()
    {
        DataTable DtMasterCategroy = Lo.RetriveMasterSubCategoryDate(0, "PROCURMENT CATEGORY", "", "SelectProductCat", "", "");
        if (DtMasterCategroy.Rows.Count > 0)
        {
            Co.FillRadioBoxList(chktendor, DtMasterCategroy, "SCategoryName", "SCategoryID");
            // chktendor.Items.Remove(chktendor.Items[1]);
        }
    }
    #endregion
    #region Filter Dropdown Code
    protected void rbIsIndeginized_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedItem.Value == "Y")
            {
                lbcart.Enabled = false;
                lbcart.Text = "View Only";
                imgIndi.Visible = true;
            }
            else
            {
                lbcart.Enabled = true;
                imgIndi.Visible = false;
            }
            lbcart.CssClass = "btn btn-sm btn-block text-white";
        }
    }
    protected void ddlcomp_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddlcomp.SelectedItem.Text != "Select")
        {
            BindComapnyDivisionCheckbox();
            SeachResult();
        }
        else
        {
            divfilterdivision.Visible = false;
            divfilterunit.Visible = false;
            SeachResult();
        }
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddldivision_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddldivision.SelectedItem.Text != "Select")
        {
            BindComapnyDivisionUnitCheckbox();
            SeachResult();
        }
        else
        {
            SeachResult();
            divfilterunit.Visible = false;
        }
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddlunit_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddlnameofdefplat_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddlprodindustrydomain_SelectedIndexChanged(object sender, EventArgs e)
    {
        BindIndustrySubDomain();
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddlprocurmentcatgory_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddldeclaration_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddlimported_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddlsearchkeywordsfilter_TextChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddlnsg_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddlnsg.SelectedItem.Text != "Select")
        {
            BindNSC();
            SeachResult();
        }
        else
        {
            divnsc.Visible = false;
            divic.Visible = false;
            SeachResult();
        }
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddlnsc_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddlnsc.SelectedItem.Text != "Select")
        {
            BindIC();
            SeachResult();
        }
        else
        {
            SeachResult();
            divic.Visible = false;
        }
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddlic_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void ddlindustrysubdoamin_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void chklast5year_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void chktendor_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (chktendor.SelectedItem.Value == "58264" || chktendor.SelectedItem.Value == "58270")
            {
                lbcart.Enabled = false;
                lbcart.Text = "View Only";
                if (rbIsIndeginized.SelectedIndex != -1)
                {
                    if (rbIsIndeginized.SelectedItem.Value == "Y")
                    {
                        imgIndi.Visible = true;
                    }
                    else
                    {
                        imgIndi.Visible = false;
                    }
                }
            }
            else
            {
                if (rbIsIndeginized.SelectedIndex != -1)
                {
                    if (rbIsIndeginized.SelectedItem.Value == "Y")
                    {
                        imgIndi.Visible = true;
                        lbcart.Enabled = false;
                        lbcart.Text = "View Only";
                    }
                    else
                    {
                        imgIndi.Visible = false;
                        lbcart.Enabled = true;
                    }
                }
            }
            lbcart.CssClass = "btn btn-sm btn-block text-white";
        }
    }
    protected void txtsearch_TextChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void rberffpurchase_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void rbsort_SelectedIndexChanged(object sender, EventArgs e)
    {
        //if (rberffpurchase.SelectedIndex != -1 || chklast5year.SelectedIndex != -1 || chktendor.SelectedIndex != -1 || ddlcomp.SelectedIndex != 0 || ddlnsg.SelectedIndex != 0 || ddlprodindustrydomain.SelectedIndex != 0 || ddlprocurmentcatgory.SelectedIndex != 0 || ddlisindezinized.SelectedIndex != -1 || ddldeclaration.SelectedIndex != -1)
        //{ BindProduct(); }
        //else
        //{
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
        //}
    }
    protected void rbindustryspecification_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void chkimportvalue_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }
    protected void rblsupplyOrder_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor SupplyOr = row.FindControl("SupplyOr") as HtmlAnchor;
            if (rblsupplyOrder.SelectedItem.Value == "Yes")
            {
                lbcart.Enabled = false;
                lbcart.Text = "View Only";
                SupplyOr.Visible = true;
            }
            else
            {
                lbcart.Enabled = true;
                SupplyOr.Visible = false;
            }
            lbcart.CssClass = "btn btn-sm btn-block text-white";
        }
    }
    #endregion
    #region Search Code Filter Code
    string insert1 = "";
    string chkproofcat = "";
    protected string Dvinsert(string sortExpression = null)
    {
        DataTable insert = new DataTable();
        insert.Columns.Add(new DataColumn("Column", typeof(string)));
        insert.Columns.Add(new DataColumn("Value", typeof(string)));
        DataRow dr;

        if (ddlcomp.SelectedItem.Text != "Select")
        {
            dr = insert.NewRow();
            dr["Column"] = "CompanyRefNo" + "=";
            dr["Value"] = "'" + ddlcomp.SelectedItem.Value + "'";
            insert.Rows.Add(dr);
            if (ddldivision.Visible == true && ddldivision.SelectedItem.Text != "Select")
            {
                dr = insert.NewRow();
                dr["Column"] = "FactoryRefNo" + "=";
                dr["Value"] = "'" + ddldivision.SelectedItem.Value + "'";
                insert.Rows.Add(dr);
                if (ddlunit.Visible == true && ddlunit.SelectedItem.Text != "Select")
                {
                    dr = insert.NewRow();
                    dr["Column"] = "UnitRefNo" + "=";
                    dr["Value"] = "'" + ddlunit.SelectedItem.Value + "'";
                    insert.Rows.Add(dr);
                }
            }
        }

        if (ddlnsg.SelectedItem.Text != "Select")
        {
            dr = insert.NewRow();
            dr["Column"] = "ProductLevel1" + "=";
            dr["Value"] = "'" + ddlnsg.SelectedItem.Value + "'";
            insert.Rows.Add(dr);
            if (divnsc.Visible != false)
            {
                if (ddlnsc.SelectedItem.Text != "Select")
                {
                    dr = insert.NewRow();
                    dr["Column"] = "ProductLevel2" + "=";
                    dr["Value"] = "'" + ddlnsc.SelectedItem.Value + "'";
                    insert.Rows.Add(dr);
                }
            }
            if (divic.Visible != false)
            {
                if (ddlic.SelectedItem.Text != "Select")
                {
                    dr = insert.NewRow();
                    dr["Column"] = "ProductLevel3" + "=";
                    dr["Value"] = "'" + ddlic.SelectedItem.Value + "'";
                    insert.Rows.Add(dr);
                }
            }
        }
        if (ddlprodindustrydomain.SelectedItem.Text != "Select")
        {
            dr = insert.NewRow();
            dr["Column"] = "TechnologyLevel1" + "=";
            dr["Value"] = "'" + ddlprodindustrydomain.SelectedItem.Value + "'";
            insert.Rows.Add(dr);
            if (divisd.Visible != false)
            {
                if (ddlindustrysubdoamin.SelectedItem.Text != "Select")
                {
                    dr = insert.NewRow();
                    dr["Column"] = "TechnologyLevel2" + "=";
                    dr["Value"] = "'" + ddlindustrysubdoamin.SelectedItem.Value + "'";
                    insert.Rows.Add(dr);
                }
            }
        }
        if (chktendor.SelectedIndex != -1)
        {
            dr = insert.NewRow();
            foreach (ListItem item in chktendor.Items)
            {
                if (item.Selected == true)
                {
                    chkproofcat = chkproofcat + item.Value + ",";
                }
            }
            dr["Column"] = "PurposeofProcurement" + " like";
            dr["Value"] = "'%" + chkproofcat.Substring(0, chkproofcat.Length - 1) + "%'";
            insert.Rows.Add(dr);
        }

        if (chkimportvalue.SelectedIndex != -1)
        {
            if (chkimportvalue.SelectedItem.Value == "2")
            {
                dr = insert.NewRow();
                dr["Column"] = "(" + rbsort.SelectedValue + " >=";
                dr["Value"] = " '10'  and " + rbsort.SelectedValue + " < '50' )";
                insert.Rows.Add(dr);

            }
            else if (chkimportvalue.SelectedItem.Value == "1")
            {
                dr = insert.NewRow();
                dr["Column"] = "(" + rbsort.SelectedValue + " >=";
                dr["Value"] = " '5'  and " + rbsort.SelectedValue + " < '10')";
                insert.Rows.Add(dr);

            }
            else if (chkimportvalue.SelectedItem.Value == "3")
            {
                dr = insert.NewRow();
                dr["Column"] = "(" + rbsort.SelectedValue + "  >";
                dr["Value"] = "'50')";
                insert.Rows.Add(dr);
            }
            else if (chkimportvalue.SelectedItem.Value == "4")
            {
                dr = insert.NewRow();
                dr["Column"] = "(" + rbsort.SelectedValue + " >=";
                dr["Value"] = " '0.5'  and " + rbsort.SelectedValue + " < '5')";
                insert.Rows.Add(dr);
            }
            else if (chkimportvalue.SelectedItem.Value == "5")
            {
                dr = insert.NewRow();
                dr["Column"] = "(" + rbsort.SelectedValue + " <=";
                dr["Value"] = " '0.5' and EstimatePrice >='0.0')";
                insert.Rows.Add(dr);
            }
        }
        if (rbsort.SelectedValue == "EstimatePrice")
        {
            dr = insert.NewRow();
            dr["Column"] = "ImportYear " + "= ";
            if (chkimportvalue.SelectedIndex == -1)
            {
                dr["Value"] = "'2019-20'";
                //  and EstimatePrice >= 0.0
            }
            else
            {
                dr["Value"] = "'2019-20'";
            }
            insert.Rows.Add(dr);
        }
        else if (rbsort.SelectedValue == "EstimatePrice18")
        {
            dr = insert.NewRow();
            dr["Column"] = "ImportYear18 " + "= ";
            if (chkimportvalue.SelectedIndex == -1)
            {
                dr["Value"] = "'2018-19'";
                // and EstimatePrice18 >= 0.0
            }
            else
            {
                dr["Value"] = "'2018-19'";
            }
            insert.Rows.Add(dr);
        }
        else if (rbsort.SelectedValue == "EstimatePrice17")
        {
            dr = insert.NewRow();
            dr["Column"] = "ImportYear17 " + "= ";
            if (chkimportvalue.SelectedIndex == -1)
            {
                dr["Value"] = "'2017-18'";
                //and EstimatePrice17 >= 0.0
            }
            else
            {
                dr["Value"] = "'2017-18'";
            }
            insert.Rows.Add(dr);
        }
        else if (rbsort.SelectedValue == "EstimatePricefuture")
        {
            dr = insert.NewRow();
            dr["Column"] = "ImportFutureYear" + " = ";
            if (chkimportvalue.SelectedIndex == -1)
            {
                dr["Value"] = "'2020-21'";
                // and EstimatePricefuture >= 0.0
            }
            else
            {
                dr["Value"] = "'2020-21'";
            }
            insert.Rows.Add(dr);
        }
        if (rbIsIndeginized.SelectedIndex != -1)
        {
            dr = insert.NewRow();
            dr["Column"] = "IsIndeginized  = ";
            dr["Value"] = "'" + rbIsIndeginized.SelectedItem.Value.Trim() + "'";
            insert.Rows.Add(dr);
        }
        if (rbindigtarget.SelectedIndex != -1)
        {
            dr = insert.NewRow();
            dr["Column"] = "IndTargetYear  like ";
            dr["Value"] = "'%" + rbindigtarget.SelectedItem.Value.Trim() + "%'";
            insert.Rows.Add(dr);
        }
        if (txtsearch.Text.Trim() != "")
        {
            dr = insert.NewRow();
            dr["Column"] = "((ProductRefNo like";
            dr["Value"] = "'" + txtsearch.Text.Trim() + "%') or (CompanyName like '" + txtsearch.Text.Trim() + "%') or (UnitName like '" + txtsearch.Text.Trim() + "%') or (FactoryName like '" + txtsearch.Text.Trim() + "%') or (NSCCode like '" + txtsearch.Text.Trim() + "%') or (ProductDescription like '" + txtsearch.Text.Trim() + "%') or (NSNGroup like '" + txtsearch.Text.Trim() + "%') or (DefencePlatform  like '" + txtsearch.Text.Trim() + "%') or (ProdIndustryDoamin like '" + txtsearch.Text.Trim() + "%')  or (NSNGroupClass like '" + txtsearch.Text.Trim() + "%')  or  (ItemCode  like '" + txtsearch.Text.Trim() + "%')  or (ProdIndustrySubDomain like '" + txtsearch.Text.Trim() + "%') or (TopPdf like '" + txtsearch.Text.Trim() + "%')  or (TopImages like '" + txtsearch.Text.Trim() + "%')  or (HSNCode like '" + txtsearch.Text.Trim() + "%') or (Convert(EstimateQu, 'System.String') LIKE '" + txtsearch.Text + "%') or (Convert(EstimatePrice, 'System.String') LIKE '" + txtsearch.Text + "%') or (DPSUPartNumber like '" + txtsearch.Text.Trim() + "%') or (OEMName like '" + txtsearch.Text.Trim() + "%') or (OEMCountry like '" + txtsearch.Text.Trim() + "%'))";
            insert.Rows.Add(dr);
        }
        if (rbindustryspecification.SelectedIndex != -1)
        {
            dr = insert.NewRow();
            dr["Column"] = "NSNGroup" + " like ";
            dr["Value"] = rbindustryspecification.SelectedItem.Value.Trim();
            insert.Rows.Add(dr);
        }
        if (rbeoilive.SelectedIndex != -1)
        {
            dr = insert.NewRow();
            dr["Column"] = "EOIStatus = ";
            if (rbeoilive.SelectedItem.Value == "Yes")
            {
                dr["Value"] = "'" + rbeoilive.SelectedItem.Value.Trim() + "' and EOIEndDate >= '" + DateTime.Now.ToString("dd-MMM-yyyy") + "'";
            }
            else
            {
                dr["Value"] = "'" + rbeoilive.SelectedItem.Value.Trim() + "'";
            }
            insert.Rows.Add(dr);
        }
        for (int i = 0; insert.Rows.Count > i; i++)
        {
            insert1 = insert1 + insert.Rows[i]["Column"].ToString() + " " + insert.Rows[i]["Value"].ToString() + " " + " and ";
            Div1.Visible = true;
        }
        if (insert1.ToString() != "")
        {
            insert1 = insert1.Substring(0, insert1.Length - 5);
        }
        return insert1;
    }
    protected string BindInsertfilter()
    {
        return Dvinsert();
    }
    public void SeachResult(string sortExpression = null)
    {
        try
        {
            DtFilterView = (DataTable)Session["TempData"];
            if (DtFilterView.Rows.Count > 0)
            {
                DataView dv = new DataView(DtFilterView);
                DataTable dtnew = dv.ToTable();
                if (dtnew.Rows.Count > 0)
                {
                    dv.RowFilter = BindInsertfilter();
                    DataTable dtinner = dv.ToTable();
                    if (dtinner.Rows.Count > 0)
                    {
                        if (rbsort.SelectedIndex != -1 && rbsort.SelectedItem.Text.Trim() == "2019-20")
                        {
                            object sumObject = dtinner.Compute("Sum(EstimatePrice)", string.Empty);
                            if (sumObject.ToString() == "")
                            {
                                lblyearvalue.Text = "Import Value during " + rbsort.SelectedItem.Text;
                                lblestimateprice.Text = "0";
                            }
                            else
                            {
                                lblyearvalue.Text = "Import Value during " + rbsort.SelectedItem.Text;
                                decimal d = Convert.ToDecimal(sumObject.ToString());
                                decimal m = Math.Round(d, 0);
                                lblestimateprice.Text = m.ToString();
                            }
                        }
                        else if (rbsort.SelectedIndex != -1 && rbsort.SelectedItem.Text.Trim() == "2018-19")
                        {
                            object sumObject = dtinner.Compute("Sum(EstimatePrice18)", string.Empty);
                            if (sumObject.ToString() == "")
                            {
                                lblyearvalue.Text = "Import Value during " + rbsort.SelectedItem.Text;
                                lblestimateprice.Text = "0";
                            }
                            else
                            {
                                lblyearvalue.Text = "Import Value during " + rbsort.SelectedItem.Text;
                                decimal d = Convert.ToDecimal(sumObject.ToString());
                                decimal m = Math.Round(d, 0);
                                lblestimateprice.Text = m.ToString();

                            }
                        }
                        else if (rbsort.SelectedIndex != -1 && rbsort.SelectedItem.Text.Trim() == "2017-18")
                        {
                            object sumObject = dtinner.Compute("Sum(EstimatePrice17)", string.Empty);
                            if (sumObject.ToString() == "")
                            {
                                lblyearvalue.Text = "Import Value during " + rbsort.SelectedItem.Text;
                                lblestimateprice.Text = "0";
                            }
                            else
                            {
                                lblyearvalue.Text = "Import Value during " + rbsort.SelectedItem.Text;
                                decimal d = Convert.ToDecimal(sumObject.ToString());
                                decimal m = Math.Round(d, 0);
                                lblestimateprice.Text = m.ToString();
                            }
                        }
                        else
                        {
                            if (rbsort.SelectedIndex != -1)
                            {
                                object sumObject1 = dtinner.Compute("Sum(EstimatePricefuture)", string.Empty);
                                if (sumObject1.ToString() == "")
                                {
                                    lblyearvalue.Text = "Estimated Import Value " + rbsort.SelectedItem.Text;
                                    lblestimateprice.Text = "0";
                                }
                                else
                                {
                                    lblyearvalue.Text = "Estimated Import Value " + rbsort.SelectedItem.Text;
                                    decimal d = Convert.ToDecimal(sumObject1.ToString());
                                    decimal m = Math.Round(d, 0);
                                    lblestimateprice.Text = m.ToString();
                                }
                            }
                        }
                    }
                    else
                    {
                        lblfuturepurchase.Text = "0"; lblestimateprice.Text = "0";
                    }
                    lbltotal.Text = "Filter/Search Results " + dtinner.Rows.Count.ToString() + " items";
                    lbltotfilter.Text = dtinner.Rows.Count.ToString();
                    DataTable dtads = dv.ToTable();
                    if (dtads.Rows.Count > 0)
                    {
                        pgsource.DataSource = dtinner.DefaultView;
                        pgsource.AllowPaging = true;
                        pgsource.PageSize = 21;
                        pgsource.CurrentPageIndex = pagingCurrentPage;
                        lblpaging.Text = "Page " + (pagingCurrentPage + 1) + " of " + pgsource.PageCount;
                        lnkbtnPgPrevious.Enabled = !pgsource.IsFirstPage;
                        LinkButton1.Enabled = !pgsource.IsFirstPage;
                        lnkbtnPgNext.Enabled = !pgsource.IsLastPage;
                        LinkButton2.Enabled = !pgsource.IsLastPage;
                        pgsource.DataSource = dtads.DefaultView;
                        if (rbsort.SelectedIndex != -1)
                        {
                            dtads.DefaultView.Sort = "SortUsing ASC";
                        }
                        else
                        {
                            dtads.DefaultView.Sort = "EstiPriMultiF,SortUsing desc";
                        }
                        dlproduct.DataSource = pgsource;
                        dlproduct.DataBind();
                        lbltotalleft.Text = "Total Imported Items :-  " + DtFilterView.Rows.Count.ToString();
                        lbltotalshowpageitem.Text = pgsource.FirstIndexInPage + 1 + " - " + (pgsource.FirstIndexInPage + pgsource.Count);
                        divcontentproduct.Visible = true;
                    }
                    else
                    {
                        ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "alert('No Record Found')", true);
                        divcontentproduct.Visible = false;
                    }
                }
                else
                {
                    ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "alert('No Record Found')", true);
                }
            }
            else
            {
                ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "alert('No Record Found')", true);
            }
        }
        catch (Exception ex)
        {
            ExceptionLogging.SendErrorToText(ex);
            ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "alert('" + ex.Message + "')", true);
        }
    }
    #endregion
    #region pageindex code
    protected void lnkbtnPgPrevious_Click(object sender, EventArgs e)
    {
        pagingCurrentPage -= 1;
        SeachResult();
    }
    protected void lnkbtnPgNext_Click(object sender, EventArgs e)
    {
        pagingCurrentPage += 1;
        SeachResult();
    }
    private int pagingCurrentPage
    {
        get
        {
            if (ViewState["pagingCurrentPage"] == null)
            {
                return 0;
            }
            else
            {
                return ((int)ViewState["pagingCurrentPage"]);
            }
        }
        set
        {
            ViewState["pagingCurrentPage"] = value;
        }
    }

    protected void dlproduct_ItemCommand(object source, DataListCommandEventArgs e)
    {
        #region ViewOneProd
        if (e.CommandName == "View")
        {
            try
            {
                DataListItem item = (DataListItem)(((Control)(e.CommandSource)).NamingContainer);
                string Role = ((HiddenField)item.FindControl("hfrole")).Value;
                DataTable DtView = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "ProductMasterID", Role.ToString());
                if (DtView.Rows.Count > 0)
                {
                    lblrefnoview.Text = e.CommandArgument.ToString();
                    lblcompname.Text = DtView.Rows[0]["CompanyName"].ToString();
                    if (DtView.Rows[0]["FactoryName"].ToString() != "")
                    {
                        lbldiviname.Text = DtView.Rows[0]["FactoryName"].ToString();
                        one.Visible = true;
                    }
                    else
                    {
                        one.Visible = false;
                    }
                    if (DtView.Rows[0]["UnitName"].ToString() != "")
                    {
                        lblunitnamepro.Text = DtView.Rows[0]["UnitName"].ToString();
                        two.Visible = true;
                    }
                    else
                    {
                        two.Visible = false;
                    }
                    lblnsngroup.Text = DtView.Rows[0]["ProdLevel1Name"].ToString();
                    lblnsngroupclass.Text = DtView.Rows[0]["ProdLevel2Name"].ToString();
                    lblclassitem.Text = DtView.Rows[0]["ProdLevel3Name"].ToString();
                    if (DtView.Rows[0]["ProductDescription"].ToString() != "")
                    {
                        itemname2.Text = DtView.Rows[0]["ProductDescription"].ToString();
                        lblitemname1.Text = DtView.Rows[0]["ProductDescription"].ToString();
                        eleven.Visible = true;
                        Tr23.Visible = true;

                    }
                    else
                    {
                        Tr23.Visible = false;
                        eleven.Visible = false;
                    }
                    if (DtView.Rows[0]["DPSUPartNumber"].ToString() != "")
                    {
                        lbldpsupartno.Text = DtView.Rows[0]["DPSUPartNumber"].ToString();
                        three.Visible = true;
                    }
                    else
                    {
                        three.Visible = false;
                    }
                    if (DtView.Rows[0]["HsnCode8digit"].ToString() != "")
                    {
                        lblhsncode8digit.Text = DtView.Rows[0]["HsnCode8digit"].ToString();
                        four.Visible = true;
                    }
                    else
                    {
                        four.Visible = false;
                    }
                    prodIndustryDomain.Text = DtView.Rows[0]["TechLevel1Name"].ToString();
                    ProdIndusSubDomain.Text = DtView.Rows[0]["Techlevel2Name"].ToString();
                    if (DtView.Rows[0]["IsProductImported"].ToString() != "")
                    {
                        five.Visible = true;
                    }
                    else
                    {
                        five.Visible = false;
                    }
                    if (DtView.Rows[0]["NSCCode"].ToString() != "")
                    {
                        lblnsccode4digit.Text = DtView.Rows[0]["NSCCode"].ToString();
                        six.Visible = true;
                    }
                    else
                    { six.Visible = false; }
                    if (DtView.Rows[0]["CountryName"].ToString() != "")
                    {
                        lbloemcountry.Text = DtView.Rows[0]["CountryName"].ToString();
                        nine.Visible = true;
                    }
                    else
                    { nine.Visible = false; }
                    if (DtView.Rows[0]["OEMName"].ToString() != "")
                    {
                        lbloemname.Text = DtView.Rows[0]["OEMName"].ToString();
                        seven.Visible = true;
                    }
                    else
                    { seven.Visible = false; }
                    if (DtView.Rows[0]["OEMPartNumber"].ToString() != "")
                    {
                        lbloempartno.Text = DtView.Rows[0]["OEMPartNumber"].ToString();
                        eight.Visible = true;
                    }
                    else
                    { eight.Visible = false; }
                    if (DtView.Rows[0]["OEMAddress"].ToString() != "")
                    {
                        lbloemaddress.Text = DtView.Rows[0]["OEMAddress"].ToString();
                        twentyfive.Visible = true;
                    }
                    else
                    { twentyfive.Visible = false; }
                    DataTable DtGridEstimate1 = new DataTable();
                    DtGridEstimate1 = Lo.RetriveSaveEstimateGrid("Select", 0, e.CommandArgument.ToString(), 0, "", "", "", "", "O");
                    if (DtGridEstimate1.Rows.Count > 0)
                    {
                        gvestimatequanold.DataSource = DtGridEstimate1;
                        gvestimatequanold.DataBind();
                        gvestimatequanold.Visible = true;
                        decimal tot = 0;
                        for (int i = 0; DtGridEstimate1.Rows.Count > i; i++)
                        {
                            tot = tot + Convert.ToDecimal(DtGridEstimate1.Rows[i]["EstimatedPrice"]);
                        }
                        decimal msumobject = tot; //* qtyimp / 100000;
                        lblvalueimport.Text = msumobject.ToString("F2");
                        ten.Visible = true;
                    }
                    else
                    {
                        gvestimatequanold.Visible = false;
                        lblvalueimport.Text = "0.00";
                        ten.Visible = false;
                    }
                    DataTable dtPdfBind = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "ProductImage", "PDF");
                    if (dtPdfBind.Rows.Count > 0)
                    {
                        gvpdf.DataSource = dtPdfBind;
                        gvpdf.DataBind();
                        gvpdf.Visible = true;
                        twele.Visible = true;
                    }
                    else
                    {
                        gvpdf.Visible = false;
                        twele.Visible = false;
                    }
                    DataTable dtImageBindfinal = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "ProductImage", "Image");
                    if (dtImageBindfinal.Rows.Count > 0)
                    {
                        dlimage.DataSource = dtImageBindfinal;
                        dlimage.DataBind();
                        dlimage.Visible = true;
                        thirteen.Visible = true;
                    }
                    else
                    {
                        dlimage.Visible = false;
                        thirteen.Visible = false;
                    }
                    DataTable dtestimatequanorprice = Lo.RetriveSaveEstimateGrid("2Select", 0, e.CommandArgument.ToString(), 0, "", "", "", "", "F");
                    if (dtestimatequanorprice.Rows.Count > 0)
                    {
                        gvestimatequanorprice.DataSource = dtestimatequanorprice;
                        gvestimatequanorprice.DataBind();
                        gvestimatequanorprice.Visible = true;
                        fifteen.Visible = true;
                    }
                    else
                    {
                        gvestimatequanorprice.Visible = false;
                        fifteen.Visible = false;
                    }
                    lblindicate.Text = "";
                    if (DtView.Rows[0]["PurposeofProcurement"].ToString() != "")
                    {
                        DataTable DTporCat = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "ProductPOP", "Company");
                        if (DTporCat.Rows.Count > 0)
                        {
                            lblindicate.Text = "";
                            lblindicate.Text = DTporCat.Rows[0]["SCategoryName"].ToString();
                            //for (int i = 0; DTporCat.Rows.Count > i; i++)
                            //{
                            //    lblindicate.Text = lblindicate.Text + DTporCat.Rows[i]["SCategoryName"].ToString() + ", ";
                            //}
                            //lblindicate.Text = lblindicate.Text.Substring(0, lblindicate.Text.Length - 2);
                            sixteen.Visible = true;
                        }
                        else
                        { sixteen.Visible = false; }
                    }
                    else
                    {
                        sixteen.Visible = false;
                    }
                    if (DtView.Rows[0]["IsIndeginized"].ToString() != "")
                    {
                        Tr1.Visible = true;
                        lblindstart.Text = DtView.Rows[0]["IsIndeginized"].ToString();
                        if (lblindstart.Text == "N")
                            lblindstart.Text = "No";
                        else
                            lblindstart.Text = "Yes";
                    }
                    else
                    { Tr1.Visible = false; }
                    if (DtView.Rows[0]["EOIStatus"].ToString() != "")
                    {
                        lbleoirep.Text = DtView.Rows[0]["EOIStatus"].ToString();
                        seventeen.Visible = true;
                    }
                    else
                    { seventeen.Visible = false; }
                    if (DtView.Rows[0]["EOIURL"].ToString() != "")
                    {
                        lbleoilink.Text = DtView.Rows[0]["EOIURL"].ToString();
                        eighteen.Visible = true;
                    }
                    else
                    { eighteen.Visible = false; }
                    string Nodel1Id = DtView.Rows[0]["NodelDetail"].ToString();
                    if (Nodel1Id.ToString() != "")
                    {
                        DataTable dtNodal = Lo.RetriveProductCode(Nodel1Id.ToString(), "", "ProdNodal", "");
                        if (dtNodal.Rows.Count > 0)
                        {
                            lblempname.Text = dtNodal.Rows[0]["NodalOficerName"].ToString();
                            lbldesignation.Text = dtNodal.Rows[0]["Designation"].ToString();
                            lblemailidpro.Text = dtNodal.Rows[0]["NodalOfficerEmail"].ToString();
                            lblphonenumber.Text = dtNodal.Rows[0]["NodalOfficerTelephone"].ToString();
                        }
                        else
                        {
                            nineteen.Visible = false;
                        }
                    }
                    else
                    {
                        nineteen.Visible = false;
                    }
                    if (DtView.Rows[0]["EndUser"].ToString() != "")
                    {
                        DataTable DTporCat = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "EndUser", "Company");
                        if (DTporCat.Rows.Count > 0)
                        {
                            lblenduser.Text = "";
                            for (int i = 0; DTporCat.Rows.Count > i; i++)
                            {
                                lblenduser.Text = lblenduser.Text + DTporCat.Rows[i]["EndUser"].ToString() + ", ";
                            }
                            lblenduser.Text = lblenduser.Text.Substring(0, lblenduser.Text.Length - 2);
                            twenty.Visible = true;
                        }
                        else
                        { twenty.Visible = false; }
                    }
                    else
                    {
                        twenty.Visible = false;
                    }
                    if (DtView.Rows[0]["PlatName"].ToString() != "")
                    {
                        lbldefenceplatform.Text = DtView.Rows[0]["PlatName"].ToString();
                        twentyone.Visible = true;
                    }
                    else
                    {
                        twentyone.Visible = false;
                    }
                    if (DtView.Rows[0]["Nomenclature"].ToString() != "")
                    {
                        lblnameofdefplat.Text = DtView.Rows[0]["Nomenclature"].ToString();
                        twentytwo.Visible = true;
                    }
                    else
                    {
                        twentytwo.Visible = false;
                    }
                    if (DtView.Rows[0]["QAAgency"].ToString() != "")
                    {
                        DataTable DTporCat = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "ProductQAAgency", "Company");
                        if (DTporCat.Rows.Count > 0)
                        {
                            lbqa.Text = "";
                            for (int i = 0; DTporCat.Rows.Count > i; i++)
                            {
                                lbqa.Text = lbqa.Text + DTporCat.Rows[i]["SCategoryName"].ToString() + ", ";
                            }
                            lbqa.Text = lbqa.Text.Substring(0, lbqa.Text.Length - 2);
                            twentysix.Visible = true;
                        }
                        else
                        { twentysix.Visible = false; }
                    }
                    else
                    {
                        twentysix.Visible = false;
                    }
                    if (DtView.Rows[0]["NIINCode"].ToString() != "")
                    {
                        Tr8.Visible = true;
                        lblnincode.Text = DtView.Rows[0]["NIINCode"].ToString();
                    }
                    else
                    {
                        Tr8.Visible = false;
                    }
                    if (DtView.Rows[0]["IndTargetYear"].ToString() != "")
                    {
                        // .Substring(0, DtView.Rows[0]["IndTargetYear"].ToString().Length - 1
                        lblindtrgyr.Text = DtView.Rows[0]["IndTargetYear"].ToString();
                        if (lblindtrgyr.Text == "NIL")
                        { Tr25.Visible = false; }
                        else
                        {
                            Tr25.Visible = true;
                        }
                    }
                    else
                    {
                        Tr25.Visible = false;
                    }
                    ScriptManager.RegisterStartupScript(this, GetType(), "aboutus", "showPopup();", true);
                }
            }
            catch (Exception ex)
            {
                ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "alert('" + ex.Message + "')", true);
            }
        }
        #endregion
        #region AddCart
        else if (e.CommandName == "addcart")
        {
            this.StoreUserIP(e.CommandArgument.ToString());
            LinkButton lnkId = (LinkButton)e.Item.FindControl("lbaddcart");
            dtCart.Columns.Add(new DataColumn("ProductRefNo", typeof(string)));
            if (lnkId.Text != "View Only")
            {
                if (ViewState["buyitems"] != null)
                {
                    dtCart = (DataTable)ViewState["buyitems"];
                    if (dtCart.Rows.Count > 0)
                    {
                        string InCart = "";
                        for (int i = 0; dtCart.Rows.Count > i; i++)
                        {
                            if (e.CommandArgument.ToString() == dtCart.Rows[i]["ProductRefNo"].ToString())
                            {
                                InCart = "AlreadyInCart";
                                lnkId.Text = "Successfully Added";
                                lnkId.Attributes.Remove("Class");
                                lnkId.Attributes.Add("Class", "btn btn-success btn-sm btn-block");
                                break;
                            }
                        }
                        if (InCart != "AlreadyInCart")
                        {
                            dr = dtCart.NewRow();
                            dr["ProductRefNo"] = e.CommandArgument.ToString();
                            dtCart.Rows.Add(dr);
                            ViewState["buyitems"] = dtCart;
                            lnkId.Text = "Successfully Added";
                            lnkId.Attributes.Remove("Class");
                            lnkId.Attributes.Add("Class", "btn btn-success btn-sm btn-block");

                        }
                    }
                }
                else
                {
                    dr = dtCart.NewRow();
                    dr["ProductRefNo"] = e.CommandArgument.ToString();
                    dtCart.Rows.Add(dr);
                    ViewState["buyitems"] = dtCart;
                    lnkId.Text = "Successfully Added";
                    lnkId.Attributes.Remove("Class");
                    lnkId.Attributes.Add("Class", "btn btn-success btn-sm btn-block");
                }
                if (dtCart != null)
                {
                    Session["DCart"] = ViewState["buyitems"];
                    totalno.InnerText = dtCart.Rows.Count.ToString();
                }
                else
                {
                    totalno.InnerText = "0";
                }
            }
        }
        #endregion      
    }
    #endregion
    #region CartCode
    #endregion
    //protected void lbcart_Click(object sender, EventArgs e)
    //{
    //    if (ViewState["buyitems"] != null)
    //    {
    //        Session["DCart"] = ViewState["buyitems"];
    //        Response.Redirect("U_Cart");
    //    }
    //    else
    //    {
    //        ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "alert('No product in cart')", true);
    //    }
    //}

    protected void lbllogout_Click(object sender, EventArgs e)
    {
        Session.Abandon();
        Session.Remove("Type");
        Session.Remove("User");
        Session.Remove("CompanyRefNo");
        Session.Remove("SFToken");
        Session.RemoveAll();
        Session.Contents.RemoveAll();
        Session.Clear();
        Response.Cache.SetCacheability(HttpCacheability.NoCache);
        Response.Cookies["DefaultDpsu"].Expires = DateTime.Now;
        Response.Buffer = true;
        Response.AppendHeader("Cache-Control", "no-cache, no-store, must-revalidate"); // HTTP 1.1.
        Response.AppendHeader("Pragma", "no-cache"); // HTTP 1.0.
        Response.AppendHeader("Expires", "0"); // Proxies.
        if (Request.Cookies["User"] != null)
        {
            Response.Cookies["User"].Value = string.Empty;
            Response.Cookies["User"].Expires = DateTime.Now.AddMonths(-20);
        }
        if (Request.Cookies["SFToken"] != null)
        {
            Response.Cookies["SFToken"].Value = string.Empty;
            Response.Cookies["SFToken"].Expires = DateTime.Now.AddMonths(-20);
        }
        Response.RedirectToRoute("Productlist");
    }

    #region TryCatchLog
    public static class ExceptionLogging
    {
        private static String ErrorlineNo, Errormsg, extype, exurl, hostIp, ErrorLocation, HostAdd;
        public static void SendErrorToText(Exception ex)
        {
            var line = Environment.NewLine + Environment.NewLine;
            ErrorlineNo = ex.StackTrace.Substring(ex.StackTrace.Length - 7, 7);
            Errormsg = ex.GetType().Name.ToString();
            extype = ex.GetType().ToString();
            exurl = context.Current.Request.Url.ToString();
            ErrorLocation = ex.Message.ToString();
            try
            {
                string filepath = context.Current.Server.MapPath("/Logs/");  //Text File Path
                if (!Directory.Exists(filepath))
                {
                    Directory.CreateDirectory(filepath);
                }
                filepath = filepath + DateTime.Today.ToString("dd-MM-yy") + ".txt";   //Text File Name
                if (!File.Exists(filepath))
                {
                    File.Create(filepath).Dispose();
                }
                using (StreamWriter sw = File.AppendText(filepath))
                {
                    string error = "Log Written Date:" + " " + DateTime.Now.ToString() + line + "Error Line No :" + " " + ErrorlineNo + line + "Error Message:" + " " + Errormsg + line + "Exception Type:" + " " + extype + line + "Error Location :" + " " + ErrorLocation + line + " Error Page Url:" + " " + exurl + line + "User Host IP:" + " " + hostIp + line;
                    sw.WriteLine("-----------Exception Details on " + " " + DateTime.Now.ToString() + "-----------------");
                    sw.WriteLine("-------------------------------------------------------------------------------------");
                    sw.WriteLine(line);
                    sw.WriteLine(error);
                    sw.WriteLine("--------------------------------*End*------------------------------------------");
                    sw.WriteLine(line);
                    sw.Flush();
                    sw.Close();
                }
            }
            catch (Exception exm)
            {
                exm.Message.ToString();
            }
        }
    }
    #endregion

    protected void btnsearch_Click(object sender, EventArgs e)
    {
        SeachResult();
        foreach (DataListItem row in dlproduct.Items)
        {
            LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
            if (rbIsIndeginized.SelectedIndex != -1)
            {
                if (rbIsIndeginized.SelectedItem.Value == "Y")
                {
                    lbcart.Enabled = false;
                    lbcart.Text = "View Only";
                    imgIndi.Visible = true;
                }
                else
                {
                    lbcart.Enabled = true;
                    imgIndi.Visible = false;
                }
                lbcart.CssClass = "btn btn-sm btn-block text-white";
            }
        }
    }

    protected void btnreset_Click(object sender, EventArgs e)
    {
        Response.RedirectToRoute("ProductList");
    }

    protected void rbeoilive_SelectedIndexChanged(object sender, EventArgs e)
    {
        SeachResult();
    }

    //protected void rbsort_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    SeachResult();
    //    foreach (DataListItem row in dlproduct.Items)
    //    {
    //        LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
    //        HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
    //        if (rbIsIndeginized.SelectedIndex != -1)
    //        {
    //            if (rbIsIndeginized.SelectedItem.Value == "Y")
    //            {
    //                lbcart.Enabled = false;
    //                lbcart.Text = "View Only";
    //                imgIndi.Visible = true;
    //            }
    //            else
    //            {
    //                lbcart.Enabled = true;
    //                imgIndi.Visible = false;
    //            }
    //            lbcart.CssClass = "btn btn-sm btn-block text-white";
    //        }
    //    }
    //}

    //protected void chkimportvalue_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    SeachResult();
    //    foreach (DataListItem row in dlproduct.Items)
    //    {
    //        LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
    //        HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
    //        if (rbIsIndeginized.SelectedIndex != -1)
    //        {
    //            if (rbIsIndeginized.SelectedItem.Value == "Y")
    //            {
    //                lbcart.Enabled = false;
    //                lbcart.Text = "View Only";
    //                imgIndi.Visible = true;
    //            }
    //            else
    //            {
    //                lbcart.Enabled = true;
    //                imgIndi.Visible = false;
    //            }
    //            lbcart.CssClass = "btn btn-sm btn-block text-white";
    //        }
    //    }
    //}

    //protected void ddlcomp_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    if (ddlcomp.SelectedItem.Text != "Select")
    //    {
    //        BindComapnyDivisionCheckbox();
    //        SeachResult();
    //    }
    //    else
    //    {
    //        divfilterdivision.Visible = false;
    //        divfilterunit.Visible = false;
    //        SeachResult();
    //    }
    //    foreach (DataListItem row in dlproduct.Items)
    //    {
    //        LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
    //        HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
    //        if (rbIsIndeginized.SelectedIndex != -1)
    //        {
    //            if (rbIsIndeginized.SelectedItem.Value == "Y")
    //            {
    //                lbcart.Enabled = false;
    //                lbcart.Text = "View Only";
    //                imgIndi.Visible = true;
    //            }
    //            else
    //            {
    //                lbcart.Enabled = true;
    //                imgIndi.Visible = false;
    //            }
    //            lbcart.CssClass = "btn btn-sm btn-block text-white";
    //        }
    //    }
    //}

    //protected void ddldivision_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    if (ddldivision.SelectedItem.Text != "Select")
    //    {
    //        BindComapnyDivisionUnitCheckbox();
    //        SeachResult();
    //    }
    //    else
    //    {
    //        SeachResult();
    //        divfilterunit.Visible = false;
    //    }
    //    foreach (DataListItem row in dlproduct.Items)
    //    {
    //        LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
    //        HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
    //        if (rbIsIndeginized.SelectedIndex != -1)
    //        {
    //            if (rbIsIndeginized.SelectedItem.Value == "Y")
    //            {
    //                lbcart.Enabled = false;
    //                lbcart.Text = "View Only";
    //                imgIndi.Visible = true;
    //            }
    //            else
    //            {
    //                lbcart.Enabled = true;
    //                imgIndi.Visible = false;
    //            }
    //            lbcart.CssClass = "btn btn-sm btn-block text-white";
    //        }
    //    }
    //}

    //protected void ddlunit_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    SeachResult();
    //    foreach (DataListItem row in dlproduct.Items)
    //    {
    //        LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
    //        HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
    //        if (rbIsIndeginized.SelectedIndex != -1)
    //        {
    //            if (rbIsIndeginized.SelectedItem.Value == "Y")
    //            {
    //                lbcart.Enabled = false;
    //                lbcart.Text = "View Only";
    //                imgIndi.Visible = true;
    //            }
    //            else
    //            {
    //                lbcart.Enabled = true;
    //                imgIndi.Visible = false;
    //            }
    //            lbcart.CssClass = "btn btn-sm btn-block text-white";
    //        }
    //    }
    //}

    //protected void rbindustryspecification_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    SeachResult();
    //    foreach (DataListItem row in dlproduct.Items)
    //    {
    //        LinkButton lbcart = row.FindControl("lbaddcart") as LinkButton;
    //        HtmlAnchor imgIndi = row.FindControl("indevisi") as HtmlAnchor;
    //        if (rbIsIndeginized.SelectedIndex != -1)
    //        {
    //            if (rbIsIndeginized.SelectedItem.Value == "Y")
    //            {
    //                lbcart.Enabled = false;
    //                lbcart.Text = "View Only";
    //                imgIndi.Visible = true;
    //            }
    //            else
    //            {
    //                lbcart.Enabled = true;
    //                imgIndi.Visible = false;
    //            }
    //            lbcart.CssClass = "btn btn-sm btn-block text-white";
    //        }
    //    }
    //}

    protected void lblviewnato_Click(object sender, EventArgs e)
    {
        DataTable DtBindNato = Lo.RetriveFilterCode("", "", "NatoPop");
        if (DtBindNato.Rows.Count > 0)
        {
            gvnatopop.DataSource = DtBindNato;
            gvnatopop.DataBind();
            ScriptManager.RegisterStartupScript(this, GetType(), "divNatoPopup", "showPopup2();", true);
        }
    }

    

    protected void totoalmore_Click(object sender, EventArgs e)
    {

    }

    protected void LinkButton1_Click(object sender, EventArgs e)
    {

    }

    protected void LinkButton2_Click(object sender, EventArgs e)
    {

    }

    
    protected void lbtotalcart_Click(object sender, EventArgs e)
    {
        if (ViewState["buyitems"] != null)
        {
            Session["DCart"] = ViewState["buyitems"];
            Response.Redirect("U_Cart");
        }
        else
        {
            ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "alert('No product in cart')", true);
        }
    }



    protected void dlproduct_ItemDataBound(object sender, DataListItemEventArgs e)
    {
        if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
        {
            LinkButton lbcart = e.Item.FindControl("lbaddcart") as LinkButton;
            HtmlAnchor lbindevisi = (HtmlAnchor)e.Item.FindControl("indevisi");
            Label ISINDI = (Label)e.Item.FindControl("ISINDI");
            Label LBPURPOSEOFPROC = (Label)e.Item.FindControl("LBPURPOSEOFPROC");
            HiddenField hfnsc = (HiddenField)e.Item.FindControl("hfnsc");
            HtmlAnchor hydecenc = (HtmlAnchor)e.Item.FindControl("LinkButton6");
            hydecenc.HRef = "~/SimilarProd?sProd=" + Encrypt.EncryptData(hfnsc.Value) + "&msort=" + Encrypt.EncryptData(rbsort.SelectedItem.Text.Trim());
            if (dtCart.Rows.Count > 0)
            {
                HiddenField hf = (HiddenField)e.Item.FindControl("hfr");
                for (int i = 0; dtCart.Rows.Count > i; i++)
                {
                    if (dtCart.Rows[i]["ProductRefNo"].ToString() == hf.Value)
                        lbcart.Text = "Successfully Added";
                    lbcart.Attributes.Remove("Class");
                    lbcart.Attributes.Add("Class", "btn btn-success btn-sm btn-block");
                }
            }
            Label lblepold = (Label)e.Item.FindControl("lblepold");
            Label lblepold17 = (Label)e.Item.FindControl("lblepold17");
            Label lblepold18 = (Label)e.Item.FindControl("lblepold18");
            Label lblepfu = (Label)e.Item.FindControl("lblepfu");
            if (rbsort.SelectedIndex != -1 && rbsort.SelectedItem.Text.Trim() == "2019-20")
            {
                lblepold.Visible = true;
                lblepfu.Visible = false;
                lblepold17.Visible = false;
                lblepold18.Visible = false;
            }
            else if (rbsort.SelectedIndex != -1 && rbsort.SelectedItem.Text.Trim() == "2018-19")
            {
                lblepold.Visible = false;
                lblepfu.Visible = false;
                lblepold17.Visible = false;
                lblepold18.Visible = true;

            }
            else if (rbsort.SelectedIndex != -1 && rbsort.SelectedItem.Text.Trim() == "2017-18")
            {
                lblepold.Visible = false;
                lblepfu.Visible = false;
                lblepold17.Visible = true;
                lblepold18.Visible = false;

            }
            else if (rbsort.SelectedIndex != -1 && rbsort.SelectedItem.Text.Trim() == "2020-21")
            {
                lblepold.Visible = false;
                lblepfu.Visible = true;
                lblepold17.Visible = false;
                lblepold18.Visible = false;
            }
            if (LBPURPOSEOFPROC.Text == "58264" || LBPURPOSEOFPROC.Text == "58270")
            {
                lbcart.Enabled = false;
                lbcart.Text = "View Only";
            }
            else
            {
                lbcart.Enabled = true;
            }
            if (ISINDI.Text == "Y")
            {
                lbindevisi.Visible = true;
                lbcart.Enabled = false;
                lbcart.Text = "View Only";
            }
            else
            {
                lbindevisi.Visible = false;
                lbcart.Enabled = true;
            }

            lbcart.CssClass = "btn btn-sm btn-block text-white";
        }
    }



    protected void rbindigtarget_SelectedIndexChanged(object sender, EventArgs e)
    {

    }

    protected void lbcart_Click(object sender, EventArgs e)
    {
        if (ViewState["buyitems"] != null)
        {
            Session["DCart"] = ViewState["buyitems"];
            Response.Redirect("U_Cart");
        }
        else
        {
            ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "alert('No product in cart')", true);
        }
    }

    protected void ddlProduct_SelectedIndexChanged(object sender, EventArgs e)
    {

    }
}
