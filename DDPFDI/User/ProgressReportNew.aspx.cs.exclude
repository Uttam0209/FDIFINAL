using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using Encryption;
using BusinessLayer;
using System.Drawing;
using DataAccessLayer;
using System.Collections.Specialized;

public partial class User_ProgressReportNew : System.Web.UI.Page
{
    Cryptography objCrypto = new Cryptography();
    Logic Lo = new Logic();
    HybridDictionary hyLogin = new HybridDictionary();
    DataTable DtGrid = new DataTable();
    string mprodInt;
    DataTable dtmGrid = new DataTable();
    private Cryptography Encrypt = new Cryptography();
    DataTable DtReq = new DataTable();
    DataTable dtproducts = new DataTable();
    string _msg = string.Empty;
    string Defaultpage = string.Empty;
    string eoivalue = "";
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            if (Session["Type"] != null && Session["CompanyRefNo"] != null)
            {
                //MenuLink();
                BindProductDetails();
            }
        }
    }
    protected void bindhover()
    {
        DataTable dtHover = Lo.RetriveFilterCode("", "", "GetProgHover");
        if (dtHover.Rows.Count > 0)
        {
            gvhover.DataSource = dtHover;
            gvhover.DataBind();
            //0
            gvhover.FooterRow.Cells[0].Text = "Total";
            gvhover.FooterRow.Cells[0].HorizontalAlign = HorizontalAlign.Center;
            object sumObjectn = dtHover.Compute("Sum(TotalProduct)", string.Empty);
            gvhover.FooterRow.Cells[1].Text = sumObjectn.ToString();
            //1
            object sumObjectn1 = dtHover.Compute("Sum(Interest)", string.Empty);
            decimal num = (Convert.ToDecimal(sumObjectn1.ToString()) / Convert.ToDecimal(lblProducts.Text) * 100);
            gvhover.FooterRow.Cells[2].Text = sumObjectn1 + " " + "(" + num.ToString("F2") + "%)";
            //2
            object sumObjectn2 = dtHover.Compute("Sum(EoiProductIntrest)", string.Empty);
            decimal num1 = (Convert.ToDecimal(sumObjectn2.ToString()) / Convert.ToDecimal(lblProducts.Text) * 100);
            gvhover.FooterRow.Cells[3].Text = sumObjectn2 + " " + "(" + num1.ToString("F2") + "%)";
            //3
            object sumObjectn3 = dtHover.Compute("Sum(eoistatus)", string.Empty);
            decimal num2 = (Convert.ToDecimal(sumObjectn3.ToString()) / Convert.ToDecimal(lblProducts.Text) * 100);
            gvhover.FooterRow.Cells[4].Text = sumObjectn3 + " " + "(" + num2.ToString("F2") + "%)";
            //4
            object sumObjectn4 = dtHover.Compute("Sum(supplyorder)", string.Empty);
            decimal num3 = (Convert.ToDecimal(sumObjectn4.ToString()) / Convert.ToDecimal(lblProducts.Text) * 100);
            gvhover.FooterRow.Cells[5].Text = sumObjectn4 + " " + "(" + num3.ToString("F2") + "%)";
            //5
            object sumObjectn5 = dtHover.Compute("Sum(Indiginized)", string.Empty);
            decimal num4 = (Convert.ToDecimal(sumObjectn5.ToString()) / Convert.ToDecimal(lblProducts.Text) * 100);
            gvhover.FooterRow.Cells[6].Text = sumObjectn5 + " " + "(" + num4.ToString("F2") + "%)";
            //6
            object sumObjectn6 = dtHover.Compute("Sum(IndigTarget)", string.Empty);
            decimal num5 = (Convert.ToDecimal(sumObjectn6.ToString()) / Convert.ToDecimal(lblProducts.Text) * 100);
            gvhover.FooterRow.Cells[7].Text = sumObjectn6 + " " + "(" + num5.ToString("F2") + "%)";
            //7
            object sumObjectn7 = dtHover.Compute("Sum(Category)", string.Empty);
            decimal num6 = (Convert.ToDecimal(sumObjectn7.ToString()) / Convert.ToDecimal(lblProducts.Text) * 100);
            gvhover.FooterRow.Cells[8].Text = sumObjectn7 + " " + "(" + num6.ToString("F2") + "%)";

            if (objCrypto.DecryptData(Session["User"].ToString()) == "shrishkumar.ofb@ofb.gov.in")
            {
                gvhover.Columns[7].Visible = true;
                gvhover.Columns[8].Visible = true;
            }
            else
            {
                gvhover.Columns[7].Visible = false;
                gvhover.Columns[8].Visible = false;
            }
        }
    }
    //protected void MenuLink()
    //{
    //    if (Session["User"] != null)
    //    {
    //        linkusername.Text = Encrypt.DecryptData(Session["User"].ToString());
    //        linkusername.Visible = true;
    //        if (linkusername.Text == "rajeev@hal-india.com")
    //        {
    //            linkusername.Text = "Welcome: " + linkusername.Text;
    //            A1.Visible = true;
    //        }
    //        else
    //        {
    //            A1.Visible = false;
    //        }
    //        linklogin.Visible = false;
    //        lblmis.Visible = true;
    //        lbllogout.Visible = true;
    //        lbmarket.Visible = true;
    //    }
    //    else
    //    {
    //        linklogin.Visible = true;
    //        linkusername.Visible = false;
    //        lblmis.Visible = false;
    //        lbllogout.Visible = false;
    //        lbmarket.Visible = false;
    //    }
    //}
    public void BindProductDetails()
    {
        DataTable dtprdetails = new DataTable();
        dtprdetails = Lo.RetriveFilterCode(Session["CompanyRefNo"].ToString(), objCrypto.DecryptData(Session["Type"].ToString()), "GetProgressData");
        if (dtprdetails.Rows.Count > 0)
        {
            gvshownproduct.DataSource = dtprdetails;
            gvshownproduct.DataBind();
            gvshownproduct.Visible = true;
            ViewState["PDatatTable"] = dtprdetails;
            ViewState["PDatatTableFirst"] = dtprdetails;
            if (objCrypto.DecryptData(Session["Type"].ToString()) == "Admin" || objCrypto.DecryptData(Session["Type"].ToString()) == "SuperAdmin")
            { lbproddetail.Visible = true; }
            else
            { lbproddetail.Visible = false; }
        }
        else
        {
            gvshownproduct.Visible = false;
            ViewState["PDatatTable"] = null;
        }
        dtprdetails = Lo.RetrieveProductDetails("Count", objCrypto.DecryptData(Session["Type"].ToString()), Session["CompanyRefNo"].ToString());
        lblProducts.Text = dtprdetails.Rows[0]["Product"].ToString();
        lblInterest.Text = dtprdetails.Rows[0]["TotalIntrestDis"].ToString();
        decimal num = (Convert.ToDecimal(lblInterest.Text) / Convert.ToDecimal(lblProducts.Text) * 100);
        lblIntrProdPer.Text = num.ToString("F2");
        lblEOIRFP.Text = dtprdetails.Rows[0]["TotalEOIDis"].ToString();
        lblother1.Text = "EOI issued : Total Product " + dtprdetails.Rows[0]["EOIRFP"].ToString();
        decimal num1 = (Convert.ToDecimal(lblEOIRFP.Text) / Convert.ToDecimal(lblProducts.Text) * 100);
        lblEoiPerc.Text = num1.ToString("F2");
        lblsupply.Text = dtprdetails.Rows[0]["SupplyOrder"].ToString();
        decimal num2 = (Convert.ToDecimal(lblsupply.Text) / Convert.ToDecimal(lblProducts.Text) * 100);
        lbSupplyPer.Text = num2.ToString("F2");
        lblindiginized.Text = dtprdetails.Rows[0]["IndiginizedOS"].ToString();
        decimal num3 = (Convert.ToDecimal(lblindiginized.Text) / Convert.ToDecimal(lblProducts.Text) * 100);
        lblIndiPerc.Text = num3.ToString("F2");
        lblInhouse.Text = dtprdetails.Rows[0]["IndiginizedInhouse"].ToString();
        lblIoS.Text = dtprdetails.Rows[0]["IndiginizedIOS"].ToString();
        lblTotalIndi.Text = dtprdetails.Rows[0]["TotalIndiginized"].ToString();
        lblNoOfProducts.Text = "Total products : " + lblProducts.Text;
        lbltotalintrestshowprod.Text = "Interest's Shown by Vendor(s) : " + lblInterest.Text;
        // lbl3.Visible = false;
    }
    protected void linklogin_Click(object sender, EventArgs e)
    {
        Response.RedirectToRoute("Login");
    }
    protected void lbeoistatus_Click(object sender, EventArgs e)
    {
        Response.RedirectToRoute("EOIStatus");
    }
    protected void linkusername_Click(object sender, EventArgs e)
    {
        if (Session["User"] != null)
        {
            Response.RedirectToRoute("Dashboard");
        }
        else
        {
            ScriptManager.RegisterClientScriptBlock(Page, Page.GetType(), "alert", "ErrorMssgPopup('Please login again');window.location='Login'", true);
        }
    }
    protected void lbShownIntrested_Click(object sender, EventArgs e)
    {
        Response.RedirectToRoute("IntrestedProduct");
    }
    protected void lbllogout_Click(object sender, EventArgs e)
    {
        Session.Abandon();
        Session.Remove("Type");
        Session.Remove("User");
        Session.Remove("CompanyRefNo");
        Session.Remove("SFToken");
        Session.RemoveAll();
        Session.Contents.RemoveAll();
        Session.Clear();
        Response.Cache.SetCacheability(HttpCacheability.NoCache);
        Response.Cookies["DefaultDpsu"].Expires = DateTime.Now;
        Response.Buffer = true;
        Response.AppendHeader("Cache-Control", "no-cache, no-store, must-revalidate"); // HTTP 1.1.
        Response.AppendHeader("Pragma", "no-cache"); // HTTP 1.0.
        Response.AppendHeader("Expires", "0"); // Proxies.
        if (Request.Cookies["User"] != null)
        {
            Response.Cookies["User"].Value = string.Empty;
            Response.Cookies["User"].Expires = DateTime.Now.AddMonths(-20);
        }
        if (Request.Cookies["SFToken"] != null)
        {
            Response.Cookies["SFToken"].Value = string.Empty;
            Response.Cookies["SFToken"].Expires = DateTime.Now.AddMonths(-20);
        }
        Response.RedirectToRoute("Productlist");
    }
    protected void gvshownproduct_RowCreated(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.TableSection = TableRowSection.TableBody;
        }
        else if (e.Row.RowType == DataControlRowType.Header)
        {
            e.Row.TableSection = TableRowSection.TableHeader;
        }
        else if (e.Row.RowType == DataControlRowType.Footer)
        {
            e.Row.TableSection = TableRowSection.TableFooter;
        }
    }
    protected void gvshownproduct_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        #region ViewOneProd
        if (e.CommandName == "Product")
        {
            try
            {
                GridViewRow item = (GridViewRow)(((Control)(e.CommandSource)).NamingContainer);
                DataTable DtView = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "ProductMasterID", "Company");
                if (DtView.Rows.Count > 0)
                {
                    lblrefnoview.Text = e.CommandArgument.ToString();
                    lblcompname.Text = DtView.Rows[0]["CompanyName"].ToString();
                    if (DtView.Rows[0]["FactoryName"].ToString() != "")
                    {
                        lbldiviname.Text = DtView.Rows[0]["FactoryName"].ToString();
                        one.Visible = true;
                    }
                    else
                    {
                        one.Visible = false;
                    }
                    if (DtView.Rows[0]["UnitName"].ToString() != "")
                    {
                        lblunitnamepro.Text = DtView.Rows[0]["UnitName"].ToString();
                        two.Visible = true;
                    }
                    else
                    {
                        two.Visible = false;
                    }
                    lblnsngroup.Text = DtView.Rows[0]["ProdLevel1Name"].ToString();
                    lblnsngroupclass.Text = DtView.Rows[0]["ProdLevel2Name"].ToString();
                    lblclassitem.Text = DtView.Rows[0]["ProdLevel3Name"].ToString();
                    if (DtView.Rows[0]["ProductDescription"].ToString() != "")
                    {
                        itemname2.Text = DtView.Rows[0]["ProductDescription"].ToString();
                        lblitemname1.Text = DtView.Rows[0]["ProductDescription"].ToString();
                        eleven.Visible = true;
                        Tr23.Visible = true;

                    }
                    else
                    {
                        Tr23.Visible = false;
                        eleven.Visible = false;
                    }
                    if (DtView.Rows[0]["DPSUPartNumber"].ToString() != "")
                    {
                        lbldpsupartno.Text = DtView.Rows[0]["DPSUPartNumber"].ToString();
                        three.Visible = true;
                    }
                    else
                    {
                        three.Visible = false;
                    }
                    if (DtView.Rows[0]["HsnCode8digit"].ToString() != "")
                    {
                        lblhsncode8digit.Text = DtView.Rows[0]["HsnCode8digit"].ToString();
                        four.Visible = true;
                    }
                    else
                    {
                        four.Visible = false;
                    }
                    prodIndustryDomain.Text = DtView.Rows[0]["TechLevel1Name"].ToString();
                    ProdIndusSubDomain.Text = DtView.Rows[0]["Techlevel2Name"].ToString();
                    if (DtView.Rows[0]["IsProductImported"].ToString() != "")
                    {
                        five.Visible = true;
                    }
                    else
                    {
                        five.Visible = false;
                    }
                    if (DtView.Rows[0]["NSCCode"].ToString() != "")
                    {
                        lblnsccode4digit.Text = DtView.Rows[0]["NSCCode"].ToString();
                        six.Visible = true;
                    }
                    else
                    { six.Visible = false; }
                    if (DtView.Rows[0]["CountryName"].ToString() != "")
                    {
                        lbloemcountry.Text = DtView.Rows[0]["CountryName"].ToString();
                        nine.Visible = true;
                    }
                    else
                    { nine.Visible = false; }
                    if (DtView.Rows[0]["OEMName"].ToString() != "")
                    {
                        lbloemname.Text = DtView.Rows[0]["OEMName"].ToString();
                        seven.Visible = true;
                    }
                    else
                    { seven.Visible = false; }
                    if (DtView.Rows[0]["OEMPartNumber"].ToString() != "")
                    {
                        lbloempartno.Text = DtView.Rows[0]["OEMPartNumber"].ToString();
                        eight.Visible = true;
                    }
                    else
                    { eight.Visible = false; }
                    if (DtView.Rows[0]["OEMAddress"].ToString() != "")
                    {
                        lbloemaddress.Text = DtView.Rows[0]["OEMAddress"].ToString();
                        twentyfive.Visible = true;
                    }
                    else
                    { twentyfive.Visible = false; }
                    DataTable DtGridEstimate1 = new DataTable();
                    DtGridEstimate1 = Lo.RetriveSaveEstimateGrid("Select", 0, e.CommandArgument.ToString(), 0, "", "", "", "", "O");
                    if (DtGridEstimate1.Rows.Count > 0)
                    {
                        gvestimatequanold.DataSource = DtGridEstimate1;
                        gvestimatequanold.DataBind();
                        gvestimatequanold.Visible = true;
                        decimal tot = 0;
                        for (int i = 0; DtGridEstimate1.Rows.Count > i; i++)
                        {
                            tot = tot + Convert.ToDecimal(DtGridEstimate1.Rows[i]["EstimatedPrice"]);
                        }
                        decimal msumobject = tot; //* qtyimp / 100000;
                        lblvalueimport.Text = msumobject.ToString("F2");
                        ten.Visible = true;
                    }
                    else
                    {
                        gvestimatequanold.Visible = false;
                        lblvalueimport.Text = "0.00";
                        ten.Visible = false;
                    }
                    DataTable dtPdfBind = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "ProductImage", "PDF");
                    if (dtPdfBind.Rows.Count > 0)
                    {
                        gvpdf.DataSource = dtPdfBind;
                        gvpdf.DataBind();
                        gvpdf.Visible = true;
                        twele.Visible = true;
                    }
                    else
                    {
                        gvpdf.Visible = false;
                        twele.Visible = false;
                    }
                    DataTable dtImageBindfinal = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "ProductImage", "Image");
                    if (dtImageBindfinal.Rows.Count > 0)
                    {
                        dlimage.DataSource = dtImageBindfinal;
                        dlimage.DataBind();
                        dlimage.Visible = true;
                        thirteen.Visible = true;
                    }
                    else
                    {
                        dlimage.Visible = false;
                        thirteen.Visible = false;
                    }
                    DataTable dtestimatequanorprice = Lo.RetriveSaveEstimateGrid("2Select", 0, e.CommandArgument.ToString(), 0, "", "", "", "", "F");
                    if (dtestimatequanorprice.Rows.Count > 0)
                    {
                        gvestimatequanorprice.DataSource = dtestimatequanorprice;
                        gvestimatequanorprice.DataBind();
                        gvestimatequanorprice.Visible = true;
                        fifteen.Visible = true;
                    }
                    else
                    {
                        gvestimatequanorprice.Visible = false;
                        fifteen.Visible = false;
                    }
                    lblindicate.Text = "";
                    if (DtView.Rows[0]["PurposeofProcurement"].ToString() != "")
                    {
                        DataTable DTporCat = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "ProductPOP", "Company");
                        if (DTporCat.Rows.Count > 0)
                        {
                            lblindicate.Text = "";
                            for (int i = 0; DTporCat.Rows.Count > i; i++)
                            {
                                lblindicate.Text = lblindicate.Text + DTporCat.Rows[i]["SCategoryName"].ToString() + ", ";
                            }
                            lblindicate.Text = lblindicate.Text.Substring(0, lblindicate.Text.Length - 2);
                            sixteen.Visible = true;
                        }
                        else
                        { sixteen.Visible = false; }
                    }
                    else
                    {
                        sixteen.Visible = false;
                    }
                    if (DtView.Rows[0]["EOIStatus"].ToString() != "")
                    {
                        lbleoirep.Text = DtView.Rows[0]["EOIStatus"].ToString();
                        seventeen.Visible = true;
                    }
                    else
                    { seventeen.Visible = false; }
                    if (DtView.Rows[0]["EOIURL"].ToString() != "")
                    {
                        lbleoilink.Text = DtView.Rows[0]["EOIURL"].ToString();
                        eighteen.Visible = true;
                    }
                    else
                    { eighteen.Visible = false; }
                    string Nodel1Id = DtView.Rows[0]["NodelDetail"].ToString();
                    if (Nodel1Id.ToString() != "")
                    {
                        DataTable dtNodal = Lo.RetriveProductCode(Nodel1Id.ToString(), "", "ProdNodal", "");
                        if (dtNodal.Rows.Count > 0)
                        {
                            lblempname.Text = dtNodal.Rows[0]["NodalOficerName"].ToString();
                            lbldesignation.Text = dtNodal.Rows[0]["Designation"].ToString();
                            lblemailidpro.Text = dtNodal.Rows[0]["NodalOfficerEmail"].ToString();
                            lblphonenumber.Text = dtNodal.Rows[0]["NodalOfficerTelephone"].ToString();
                        }
                        else
                        {
                            nineteen.Visible = false;
                        }
                    }
                    else
                    {
                        nineteen.Visible = false;
                    }
                    if (DtView.Rows[0]["EndUser"].ToString() != "")
                    {
                        DataTable DTporCat = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "EndUser", "Company");
                        if (DTporCat.Rows.Count > 0)
                        {
                            lblenduser.Text = "";
                            for (int i = 0; DTporCat.Rows.Count > i; i++)
                            {
                                lblenduser.Text = lblenduser.Text + DTporCat.Rows[i]["EndUser"].ToString() + ", ";
                            }
                            lblenduser.Text = lblenduser.Text.Substring(0, lblenduser.Text.Length - 2);
                            twenty.Visible = true;
                        }
                        else
                        { twenty.Visible = false; }
                    }
                    else
                    {
                        twenty.Visible = false;
                    }
                    if (DtView.Rows[0]["PlatName"].ToString() != "")
                    {
                        lbldefenceplatform.Text = DtView.Rows[0]["PlatName"].ToString();
                        twentyone.Visible = true;
                    }
                    else
                    {
                        twentyone.Visible = false;
                    }
                    if (DtView.Rows[0]["Nomenclature"].ToString() != "")
                    {
                        lblnameofdefplat.Text = DtView.Rows[0]["Nomenclature"].ToString();
                        twentytwo.Visible = true;
                    }
                    else
                    {
                        twentytwo.Visible = false;
                    }
                    if (DtView.Rows[0]["QAAgency"].ToString() != "")
                    {
                        DataTable DTporCat = Lo.RetriveProductCode("", e.CommandArgument.ToString(), "ProductQAAgency", "Company");
                        if (DTporCat.Rows.Count > 0)
                        {
                            lbqa.Text = "";
                            for (int i = 0; DTporCat.Rows.Count > i; i++)
                            {
                                lbqa.Text = lbqa.Text + DTporCat.Rows[i]["SCategoryName"].ToString() + ", ";
                            }
                            lbqa.Text = lbqa.Text.Substring(0, lbqa.Text.Length - 2);
                            twentysix.Visible = true;
                        }
                        else
                        { twentysix.Visible = false; }
                    }
                    else
                    {
                        twentysix.Visible = false;
                    }
                    if (DtView.Rows[0]["NIINCode"].ToString() != "")
                    {
                        Tr8.Visible = true;
                        lblnincode.Text = DtView.Rows[0]["NIINCode"].ToString();
                    }
                    else
                    {
                        Tr8.Visible = false;
                    }
                    if (DtView.Rows[0]["IndTargetYear"].ToString() != "")
                    {
                        lblindtrgyr.Text = DtView.Rows[0]["IndTargetYear"].ToString().Substring(0, DtView.Rows[0]["IndTargetYear"].ToString().Length - 1);
                        if (lblindtrgyr.Text == "NIL")
                        { Tr25.Visible = false; }
                        else
                        {
                            Tr25.Visible = true;
                        }
                    }
                    else
                    {
                        Tr25.Visible = false;
                    }
                    DataTable DtBindIntrestUser = Lo.RetriveFilterCode(e.CommandArgument.ToString(), "", "SHomedetails");
                    if (DtBindIntrestUser.Rows.Count > 0)
                    {
                        gvRequester.DataSource = DtBindIntrestUser;
                        gvRequester.DataBind();
                        lblIntrCount.Text = DtBindIntrestUser.Rows.Count.ToString();
                    }
                    else
                    {
                        gvRequester.Visible = false;
                    }
                    ScriptManager.RegisterStartupScript(this, GetType(), "ProductCompany", "showPopup();", true);
                }
            }
            catch (Exception ex)
            {
                ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "alert('" + ex.Message + "')", true);
            }

        }
        else if (e.CommandName == "EOI")
        {
            GridViewRow item = (GridViewRow)(((Control)(e.CommandSource)).NamingContainer);
            HiddenField hfeoi = (HiddenField)item.FindControl("hfeoiurl");
            HyperLink hflink = (HyperLink)item.FindControl("mhylink");
            if (hfeoi.Value != "")
            {
                mhylink.Text = hfeoi.Value;
                mhylink.NavigateUrl = hfeoi.Value;
                ScriptManager.RegisterStartupScript(this, GetType(), "divstatus", "showPopup1();", true);
            }
            else
            {
                mhylink.Text = "NO Url Found";
                mhylink.NavigateUrl = "PReport";
                ScriptManager.RegisterStartupScript(this, GetType(), "divstatus", "showPopup1();", true);
            }
        }
        #endregion
    }
    protected void gvshownproduct_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            HiddenField hfeoi = (HiddenField)e.Row.FindControl("hfeoiurl");
            HiddenField hfrefno = (HiddenField)e.Row.FindControl("hfrefno");
            LinkButton lbeoi = (LinkButton)e.Row.FindControl("EOI");
            LinkButton lbSupplyorder = (LinkButton)e.Row.FindControl("mSupplyorder");
            LinkButton lbsuccessstory = (LinkButton)e.Row.FindControl("successstory");
            Label lbdivision = (Label)e.Row.FindControl("lbldivsion");
            Label lbunit = (Label)e.Row.FindControl("lblunit");
            if (lbeoi.Text == "Yes")
            {
                lbeoi.Visible = true;
            }
            else
            {
                lbeoi.Visible = false;
            }
            if (lbSupplyorder.Text == "Yes")
            {
                lbSupplyorder.Visible = true;
            }
            else
            {
                lbSupplyorder.Visible = false;
            }
            if (lbsuccessstory.Text == "Y")
            {
                lbsuccessstory.Visible = true;
            }
            else
            { lbsuccessstory.Visible = false; }
            if (lbunit.Text != "")
            {
                lbdivision.Visible = false;
                lbunit.Visible = true;
            }
            else
            {
                lbdivision.Visible = true;
                lbunit.Visible = false;
                if (lbdivision.Text == "")
                {
                    lbdivision.Text = e.Row.Cells[2].Text;
                }
            }
            if (e.Row.Cells[1].Text == "01-Jan-1900")
            { e.Row.Cells[1].Text = ""; }

        }
    }
    protected void lblProducts_Click(object sender, EventArgs e)
    {
        DataTable dtFist = (DataTable)ViewState["PDatatTableFirst"];
        if (dtFist.Rows.Count > 0)
        {
            gvshownproduct.DataSource = dtFist;
            gvshownproduct.DataBind();
            ViewState["PDatatTable"] = dtFist;
            ViewState["PDatatTableFirst"] = dtFist;
            tabcolrchng.Visible = false;
        }
        else
        {
            gvshownproduct.Visible = false;
            ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "('No Record Found')", true);
        }
    }
    int countprod;
    protected void lblInterest_Click(object sender, EventArgs e)
    {
        DataTable mIntrest = (DataTable)ViewState["PDatatTable"];
        if (mIntrest.Rows.Count > 0)
        {
            DataView mIntrestView = new DataView(mIntrest);
            mIntrestView.RowFilter = "VendorName <> ''";
            DataTable uniqueTable = mIntrestView.ToTable(true, "VendorName");
            DataTable mnIntrest = mIntrestView.ToTable();
            if (mnIntrest.Rows.Count > 0)
            {
                gvshownproduct.DataSource = mnIntrest;
                gvshownproduct.DataBind();
                countprod = Convert.ToInt32(gvshownproduct.Rows.Count.ToString());
                lbltotother.Text = "Total Product : " + lblProducts.Text;
                lblNoOfProducts.Text = "No. of interested shown : " + countprod.ToString();
                lbltotalintrestshowprod.Text = "Interest/Vendor : " + uniqueTable.Rows.Count;
                tabcolrchng.Style["Background-Color"] = "#999966";
                divInfo.Visible = true;
                th1.Visible = true;
                th2.Visible = false;
            }
            else
            {
                gvshownproduct.Visible = false;
                ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "('No Record Found')", true);
            }
        }
    }
    protected void lblEOIRFP_Click(object sender, EventArgs e)
    {
        DataTable mIntrest = (DataTable)ViewState["PDatatTable"];
        if (mIntrest.Rows.Count > 0)
        {
            DataView mIntrestView = new DataView(mIntrest);
            mIntrestView.RowFilter = "EOIStatus ='Yes'";
            DataTable mnIntrest = mIntrestView.ToTable();
            if (mnIntrest.Rows.Count > 0)
            {
                gvshownproduct.DataSource = mnIntrest;
                gvshownproduct.DataBind();
                lbltotother.Text = "Total Product : " + lblProducts.Text;
                lblNoOfProducts.Text = "No. of interested shown : " + lblInterest.Text;
                lbltotalintrestshowprod.Text = "EOI Issued : interest : product " + lblEOIRFP.Text;
                tabcolrchng.Style["Background-Color"] = "#00CC66";
                th2.Visible = true;
                divInfo.Visible = true;
                th1.Visible = true;
            }
            else
            {
                gvshownproduct.Visible = false;
                ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "('No Record Found')", true);
            }
        }
    }
    protected void lbproddetail_Click(object sender, EventArgs e)
    {
        bindhover();
        ScriptManager.RegisterStartupScript(this, GetType(), "ProductCompany1", "showPopup2();", true);
    }
    protected void lblInhouse_Click(object sender, EventArgs e)
    {
        DataTable mIntrest = (DataTable)ViewState["PDatatTable"];
        if (mIntrest.Rows.Count > 0)
        {
            DataView mIntrestView = new DataView(mIntrest);
            mIntrestView.RowFilter = "PurposeofProcurement like '%58270%'";
            DataTable mnIntrest = mIntrestView.ToTable();
            if (mnIntrest.Rows.Count > 0)
            {
                gvshownproduct.DataSource = mnIntrest;
                gvshownproduct.DataBind();
                divInfo.Visible = false;
            }
            else
            {
                gvshownproduct.Visible = false;
                ScriptManager.RegisterStartupScript(Page, Page.GetType(), "alert", "('No Record Found')", true);
            }
        }
    }
}